#pragma once

#ifndef SIM_ON
#include "HALAL/Models/HALconfig/HALconfig.hpp"
#include "HALAL/Models/DMA/DMA.hpp"
#include "HALAL/Services/DigitalOutputService/DigitalOutputService.hpp"
#include "HALAL/Services/DigitalInputService/DigitalInputService.hpp"
#include "HALAL/Services/Flash/Flash.hpp"
#include "HALAL/Services/Flash/FlashTests/Flash_Test.hpp"
#include "HALAL/Services/ADC/ADC.hpp"
#include "HALAL/Services/PWM/PWM/PWM.hpp"
#include "HALAL/Services/PWM/DualPWM/DualPWM.hpp"
#include "HALAL/Services/PWM/PhasedPWM/PhasedPWM.hpp"
#include "HALAL/Services/PWM/DualPhasedPWM/DualPhasedPWM.hpp"
#include "HALAL/Services/Time/Time.hpp"
#include "HALAL/Services/InputCapture/InputCapture.hpp"
#include "HALAL/Services/Encoder/Encoder.hpp"
#include "HALAL/Services/EXTI/EXTI.hpp"
#include "HALAL/Services/Communication/SPI/SPI.hpp"
#include "HALAL/Services/Communication/UART/UART.hpp"
#include "HALAL/Services/Communication/I2C/I2C.hpp"
#include "HALAL/Models/Packets/ForwardOrder.hpp"
#include "HALAL/Services/Communication/Ethernet/UDP/DatagramSocket.hpp"
#include "HALAL/Services/Communication/Ethernet/TCP/ServerSocket.hpp"
#include "HALAL/Services/Communication/Ethernet/TCP/Socket.hpp"
#include "HALAL/Services/Communication/Ethernet/Ethernet.hpp"
#include "HALAL/Services/Communication/FDCAN/FDCAN.hpp"
#include "HALAL/Services/Communication/SNTP/SNTP.hpp"
#include "HALAL/Services/CORDIC/CORDIC.hpp"
#include "HALAL/Services/FMAC/FMAC.hpp"
#include "HALAL/Models/MPUManager/MPUManager.hpp"
#include "HALAL/Services/InfoWarning/InfoWarning.hpp"
#include "HALAL/Services/Watchdog/Watchdog.hpp"
#include "HALAL/Models/Packets/Order.hpp"
#include "HALAL/Services/Time/RTC.hpp"
#else
#include "HALALMock/Models/HALconfig/HALconfig.hpp"
#include "HALALMock/Models/DMA/DMA.hpp"
#include "HALALMock/Services/DigitalOutputService/DigitalOutputService.hpp"
#include "HALALMock/Services/DigitalInputService/DigitalInputService.hpp"
#include "HALALMock/Services/Flash/Flash.hpp"
#include "HALALMock/Services/Flash/FlashTests/Flash_Test.hpp"
#include "HALALMock/Services/ADC/ADC.hpp"
#include "HALALMock/Services/PWM/PWM/PWM.hpp"
#include "HALALMock/Services/PWM/DualPWM/DualPWM.hpp"
#include "HALALMock/Services/PWM/PhasedPWM/PhasedPWM.hpp"
#include "HALALMock/Services/PWM/DualPhasedPWM/DualPhasedPWM.hpp"
#include "HALALMock/Services/Time/Time.hpp"
#include "HALALMock/Services/InputCapture/InputCapture.hpp"
#include "HALALMock/Services/Encoder/Encoder.hpp"
#include "HALALMock/Services/EXTI/EXTI.hpp"
#include "HALALMock/Services/Communication/SPI/SPI.hpp"
#include "HALALMock/Services/Communication/UART/UART.hpp"
#include "HALALMock/Services/Communication/I2C/I2C.hpp"
#include "HALALMock/Models/Packets/ForwardOrder.hpp"
#include "HALALMock/Services/Communication/Ethernet/UDP/DatagramSocket.hpp"
#include "HALALMock/Services/Communication/Ethernet/TCP/ServerSocket.hpp"
#include "HALALMock/Services/Communication/Ethernet/TCP/Socket.hpp"
#include "HALALMock/Services/Communication/Ethernet/Ethernet.hpp"
#include "HALALMock/Services/Communication/FDCAN/FDCAN.hpp"
#include "HALALMock/Services/Communication/SNTP/SNTP.hpp"
#include "HALALMock/Services/CORDIC/CORDIC.hpp"
#include "HALALMock/Services/FMAC/FMAC.hpp"
#include "HALALMock/Models/MPUManager/MPUManager.hpp"
#include "HALALMock/Services/InfoWarning/InfoWarning.hpp"
#include "HALALMock/Services/Watchdog/Watchdog.hpp"
#include "HALALMock/Models/Packets/Order.hpp"
#include "HALALMock/Services/Time/RTC.hpp"
#endif

namespace HALAL {
	void start(IPV4 ip, IPV4 subnet_mask, IPV4 gateway, UART::Peripheral& printf_peripheral);
}
